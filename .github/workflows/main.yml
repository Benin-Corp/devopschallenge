# This is a basic workflow to help you get started with Actions

name: Benin-Corp DevOps Challenge

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      GITHUB_WORKSPACE: /home/ubuntu/actions-runner/_work/devopschallenge/devopschallenge
      SSH_KEY: ${{secrets.SSH_KEY}}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Setup Server Connection
        run: |      
          mkdir ~/.ssh
          echo "$SSH_KEY" >> ~/.ssh/ubuntu
          chmod 400 ~/.ssh/ubuntu
          echo -e "Host ubuntu\n\tUser ubuntu\n\tHostname 44.205.239.157\n\tIdentityFile ~/.ssh/ubuntu\n\tStrictHostKeyChecking No" >> ~/.ssh/config

      # Runs a single command using the runners shell
      - name: Congigure backend
        # working-directory: backend
        run: |
          echo Configuring your backend
          echo "$PWD"
          cd backend && npm ci
          rsync -r -z -e ssh backend/ ubuntu:~/backend
          # ssh ubuntu "pm2 reload all"

      # Runs a set of commands using the runners shell
      - name: Configure frontend
        working-directory: frontend
        run: |
          echo Configuring your frontend
          echo "$PWD"
          npm ci
          npm run build
          # mkdir ~/.ssh
          # echo "$SSH_KEY" >> ~/.ssh/ubuntu
          # chmod 400 ~/.ssh/ubuntu
          # echo -e "Host ubuntu\n\tUser ubuntu\n\tHostname 44.205.239.157\n\tIdentityFile ~/.ssh/ubuntu\n\tStrictHostKeyChecking No" >> ~/.ssh/config
          rsync -r -e ssh build/ ubuntu:~/public_html
          # ssh ubuntu "pm2 reload all"
